source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
ggplot(data = midwest) +
geom_point(mapping = aes(x = percollege, y = peradultpoverty))
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/Documents/exercises-jacindaeng/chapter-16-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/exercises-jacindaeng/chapter-16-exercises/exercise-1/exercise.R', echo=TRUE)
# This data set has A LOT of rows. To make things a bit more readable,
# use dplyr's `sample_n()` function to get a random 1000 rows from the data set
# Store this sample in a variable `diamonds_sample`
diamonds_sample <= sample_n(diamonds, 1000)
source('~/Documents/exercises-jacindaeng/chapter-16-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/exercises-jacindaeng/chapter-16-exercises/exercise-1/exercise.R', echo=TRUE)
# Draw another scatter plot for `diamonds_sample` of price (y) by carat (x),
# but with all of the dots colored "blue".
# Hint: you'll need to set the color channel, not map a value to it!
ggplot(data = diamonds_sample) +
geom_point(
mapping = aes(
x = carat,
y = price
),
color = "blue"
)
source('~/Documents/exercises-jacindaeng/chapter-16-exercises/exercise-1/exercise.R', echo=TRUE)
# Install and load the `ggplot2` package
# You will also want to load `dplyr`
library("ggplot2")
library("dplyr")
# For this exercise you'll be working with the `diamonds` data set included in
# the ggplot2 library
# Use `?diamonds` to get more information about this data set (including the
# column descriptions. Also check the _column names_ and the _number of rows_
# in the data set
?diamonds
# This data set has A LOT of rows. To make things a bit more readable,
# use dplyr's `sample_n()` function to get a random 1000 rows from the data set
# Store this sample in a variable `diamonds_sample`
diamonds_sample <- sample_n(diamonds, 1000)
nrow(diamonds_sample)
# Start by making a new `ggplot` with the `diamonds_sample` as the data (no
# geometry yet)
# What do you see? (What did you expect?)
ggplot(data = diamonds_sample)
# Draw a scatter plot (with point geometry) with for the `diamonds_sample` set,
# with the `carat` mapped to the x-position and `price` mapped to the y-position.
ggplot(data = diamonds_sample) +
geom_point(mapping = aes(x = carat, y = price))
# Draw the same plot as above, but color each of the points based on their
# clarity.
ggplot(data = diamonds_sample) +
geom_point(mapping = aes(x = carat, y = price, color = clarity))
# Draw the same plot as above, but for the entire `diamonds` data set. Note this
# may take a few seconds to generate.
ggplot(data = diamonds) +
geom_point(mapping = aes(x = arat, y = price, color = clarity))
# Draw another scatter plot for `diamonds_sample` of price (y) by carat (x),
# but with all of the dots colored "blue".
# Hint: you'll need to set the color channel, not map a value to it!
ggplot(data = diamonds_sample) +
geom_point(
mapping = aes(
x = carat,
y = price
),
color = "blue"
)
# Draw a scatter plot for `diamonds_sample` of `price` by `carat`, where each
# Draw a scatter plot for `diamonds_sample` of *`cut`* by `carat`, where each
source('~/Documents/exercises-jacindaeng/chapter-16-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/exercises-jacindaeng/chapter-16-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/exercises-jacindaeng/chapter-16-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/exercises-jacindaeng/chapter-16-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/exercises-jacindaeng/chapter-16-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/exercises-jacindaeng/chapter-16-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/exercises-jacindaeng/chapter-16-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/exercises-jacindaeng/chapter-16-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
#install.packages("maps")
library("maps")
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
source('~/OneDrive - UW/INFO 201/2:26 lecture.R', echo=TRUE)
shiny::runApp('Documents/a8-data-app-jacindaeng')
runApp('Documents/a8-data-app-jacindaeng')
runApp('Documents/a8-data-app-jacindaeng')
runApp('Documents/a8-data-app-jacindaeng')
runApp('Documents/a8-data-app-jacindaeng/practice_app.R')
runApp('Documents/a8-data-app-jacindaeng')
runApp('Documents/a8-data-app-jacindaeng')
runApp('Documents/a8-data-app-jacindaeng')
runApp('Documents/a8-data-app-jacindaeng')
runApp('Documents/a8-data-app-jacindaeng')
runApp('Documents/exercises-jacindaeng/chapter-19-exercises/exercise-3')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='jacindaeng', token='739F2A213895DA1218917611FE844D3A', secret='X3fQYRy/9K1GBFHpsrYJjzQ5Iu9Rqi2zWeJfZl+c')
